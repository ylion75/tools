GIT

git init
git status 
commit //sauvegarde version du code

git ignore -> il faut créer un dossier .gitignore à la source
Par exemple pour les fichiers générés (binaires, versions)

Premier commit
git commit -> initial commit (avec tous les fichiers)

git log -> retracer les commit

INITIATION REPO GITHUB
git init
git add README.ME //ajoute des fichiers 
git commit -m "first commit"
git commit branch -M main 
git remote add origin https://github.com/ylion75/tools.git (//ou autre repo github)
git push -u origin main

LES BRANCHES

git branch my-feature (créé une branche pour faire ses développement)
git switch my-feature (pour aller sur la branche
git switch master
git merge my-feature
git branche -d my feature (permet de supprimer la branche après le merge)

git push -u origin my-feature

git pull (recupère les données de github en local)



ERROR MESSAGE 
git push --set-upstream origin master

Pourquoi j'ai une branche master et un main sur mon github ? Comment je fusionne les deux ? 
Test ; est-ce que ca upload sur le github ? 

GIT CHECKOUT 
git checkout "branch"[ex:"branch"/"master"] : permet de changer de branche

RESUME (AVANT D'ALLER SE COUCHER):
1/ init 
2/ commit -m "message-commit" (ne pas oublier le message sinon c'est une galère)
3/ relite add origin <"URL repo Github">
4/ push -u origin master (selon la branche)
5/ garder la foi

Questions a résoudre : 
- Pourquoi j'ai différents fichiers dans mon git remote -v
- Toujours un probleme : mes gitpush passent mais j'ai toujours deux branches. Les fichiers apparaissent dans master mais pas dans main (--> merge ??)
- A voir : checker git merge et git rebase pour fusionner le main et le master de façon propre
- A voir : la question d'au dessus, et toujours 4 fichiers (2 fetch / 2 push) dans : git remote -v

